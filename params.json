{"name":"Introspy","tagline":"Security profiling for blackbox iOS","body":"### The Problem\r\nIn 2013, assessing the security of iOS applications still involves a lot of manual, time-consuming tasks - especially when performing a black-box assessment. Without access to source code, a comprehensive review of these application currently requires in-depth knowledge of various APIs and the ability to use relatively complex, generic tools such as Cycript, or Mobile Substrate - or just jump straight into the debugger.\r\n\r\nTo simplify this process, we are releasing Introspy - an open-source security profiler for iOS. Introspy is designed to help penetration testers understand what an application does at runtime. \r\n\r\n### How Introspy works\r\nThe tool comprises two separate components: an iOS tracer and an analyzer. \r\n\r\nThe iOS tracer can be installed on a jailbroken iOS device. It will hook and record security-sensitive APIs called by a given application at run-time: function calls related to cryptography, IPCs, data storage / protection, networking, and user privacy are all recorded and persisted in a SQLite database on the device. \r\n\r\nThis database can then be fed to the Introspy analyzer, which generates an HTML report displaying all recorded calls, plus a list of potential vulnerabilities affecting the application.\r\n\r\n### Tracer\r\nOnce installed, the tracer will stored in a SQLite database all calls made by iOS applications to security-sensitive APIs.\r\n\r\n#### Selecting Apps to be monitored\r\nThe tracer lets the user choose which iOS App should be monitored:\r\n![Apps](http://isecpartners.github.io/introspy/images/apps.png)\r\n\r\n#### Selecting APIs to be profiled\r\nThe tracer lets the user choose which APIs should be recorded:\r\n![Settings](http://isecpartners.github.io/introspy/images/settings.png)\r\n\r\n#### Logging to the console\r\nThe tracer can be configured to log to the console all the profiled calls in real time:\r\n![xCode console](http://isecpartners.github.io/introspy/images/xcode.png)\r\n\r\n\r\n### Analyzer\r\nThe analyzer is a Python script that can process a SQLite database generated by the tracer and output various information about the traced calls or generate an HTML report.\r\n\r\n#### Recovering a SQLite DB from an iOS device\r\nThe analyzer can connect to a device over SSH and recover DB files generated by the tracer:\r\n```\r\n$ python introspy.py 192.168.1.127 --outdir e-bank\r\nmobile@192.168.1.127's password:\r\n0. ./Applications/94656731-0259-4AE9-9EEE-BADC9244AD82/introspy-com.isecpartners.e-bank.db\r\n1. ./introspy-com.apple.mobilemail.db\r\n2. ./introspy-com.isecpartners.introspytestapp.db\r\nSelect the database to analyze: 0\r\n```\r\n\r\n#### HTML Report - Traced calls\r\nThe analyzer can generate HTML reports displaying the list of all traced calls, including arguments and return values:\r\n![Traced calls](http://isecpartners.github.io/introspy/images/calls.png)\r\n\r\n#### HTML Report - Potential findings\r\nThe analyzer will also explicitly flag potentially dangerous or interesting function calls:\r\n![Potential findings](http://isecpartners.github.io/introspy/images/findings.png)\r\n\r\n### Getting started\r\nInstructions are available in the project's README on [Introspy's Github repo](https://github.com/iSECPartners/introspy).\r\n\r\n### Authors\r\n* Tom Daniels - @thirstscolr\r\n* Alban Diquet - @nabla-c0d3","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}