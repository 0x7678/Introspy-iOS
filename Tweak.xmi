
// Utility functions
#import "CallTracer.h"
#import "IntrospySQLiteStorage.h"


static NSString *preferenceFilePath = @"/private/var/mobile/Library/Preferences/com.isecpartners.introspy.plist";


// Hooks for C functions directly use MobileSubstrate
#import "hooks/KeyChainHooks.h"


// Hooks for ObjC methods rely on the Logos pre-processor
// H4ck to split Logos hooking code into separate files: we're including actual code, not headers
IntrospySQLiteStorage *traceStorage;

%group DataStorageHooks
#include "hooks/NSDataHooks.xm"
#include "hooks/NSFileHandleHooks.xm"
#include "hooks/NSFileManagerHooks.xm"
#include "hooks/NSUserDefaultsHooks.xm"
#include "hooks/NSInputStreamHooks.xm"
#include "hooks/NSOutputStreamHooks.xm"
%end



%ctor {
	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
	// Only hook Apps the user has selected in Introspy's settings panel
	NSString *appId = [[NSBundle mainBundle] bundleIdentifier];
	if (appId == nil) {
		[pool drain];
		return;
	}

    NSMutableDictionary* preferences = [[NSMutableDictionary alloc] initWithContentsOfFile:preferenceFilePath];
	NSString *appPreferenceKey = [NSString stringWithFormat:@"Settings-%@", appId];
	NSLog(@"APPNAME = %@", appId);

    if ([preferences objectForKey:appPreferenceKey]) { 

		// Initialize DB storage
		traceStorage = [[IntrospySQLiteStorage alloc] initWithDefaultDBFilePath];
		if (traceStorage != nil) {

	    	// Initialize hooks
	    	// TODO: if Datastorage.is_enabled etc...
	    	%init(DataStorageHooks);
	    	[KeyChainHooks enableHooks];
		}
		else {
			NSLog(@"Introspy - DB Initialization error; disabling hooks.");
		}
	}
	[preferences release];
	[pool drain];
}
